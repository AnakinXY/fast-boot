// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: pb/sys.proto

package sysPb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ------------------------------------
// Common Message
// ------------------------------------
type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{0}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsReq) Reset() {
	*x = IdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsReq) ProtoMessage() {}

func (x *IdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsReq.ProtoReflect.Descriptor instead.
func (*IdsReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{1}
}

func (x *IdsReq) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

type AnyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AnyReq) Reset() {
	*x = AnyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyReq) ProtoMessage() {}

func (x *AnyReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyReq.ProtoReflect.Descriptor instead.
func (*AnyReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{2}
}

type IdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdResp) Reset() {
	*x = IdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdResp) ProtoMessage() {}

func (x *IdResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdResp.ProtoReflect.Descriptor instead.
func (*IdResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{3}
}

func (x *IdResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SuccessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SuccessResp) Reset() {
	*x = SuccessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResp) ProtoMessage() {}

func (x *SuccessResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResp.ProtoReflect.Descriptor instead.
func (*SuccessResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{4}
}

type SuccessIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SuccessIdResp) Reset() {
	*x = SuccessIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessIdResp) ProtoMessage() {}

func (x *SuccessIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessIdResp.ProtoReflect.Descriptor instead.
func (*SuccessIdResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{5}
}

func (x *SuccessIdResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// --------------------------------角色表--------------------------------
type SysRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`            //角色名称
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`            //角色编码
	Sort      int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`           //显示顺序
	Status    int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`       //角色状态(1-正常；0-停用)
	DataScope int64  `protobuf:"varint,6,opt,name=dataScope,proto3" json:"dataScope,omitempty"` //数据权限(0-所有数据；1-部门及子部门数据；2-本部门数据；3-本人数据)
	CreatedAt string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //创建时间
	UpdatedAt string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`  //更新时间
}

func (x *SysRole) Reset() {
	*x = SysRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRole) ProtoMessage() {}

func (x *SysRole) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRole.ProtoReflect.Descriptor instead.
func (*SysRole) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{6}
}

func (x *SysRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysRole) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SysRole) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysRole) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysRole) GetDataScope() int64 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *SysRole) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysRole) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// --------------------------------角色和菜单关联表--------------------------------
type SysRoleMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"` //角色ID
	MenuId int64 `protobuf:"varint,2,opt,name=menuId,proto3" json:"menuId,omitempty"` //菜单ID
}

func (x *SysRoleMenu) Reset() {
	*x = SysRoleMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleMenu) ProtoMessage() {}

func (x *SysRoleMenu) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleMenu.ProtoReflect.Descriptor instead.
func (*SysRoleMenu) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{7}
}

func (x *SysRoleMenu) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SysRoleMenu) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

// --------------------------------用户信息表--------------------------------
type SysUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	Username    string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`    //用户名
	Nickname    string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`    //昵称
	Gender      int64    `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`       //性别((1:男;2:女))
	Password    string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`    //密码
	DeptId      int64    `protobuf:"varint,6,opt,name=deptId,proto3" json:"deptId,omitempty"`       //部门ID
	Avatar      string   `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`        //用户头像
	Mobile      string   `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`        //联系方式
	Status      int64    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`       //用户状态((1:正常;0:禁用))
	Email       string   `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`         //用户邮箱
	CreatedAt   string   `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt   string   `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
	Roles       []string `protobuf:"bytes,13,rep,name=roles,proto3" json:"roles,omitempty"`
	DeptName    string   `protobuf:"bytes,14,opt,name=deptName,proto3" json:"deptName,omitempty"`
	GenderLabel string   `protobuf:"bytes,15,opt,name=GenderLabel,proto3" json:"GenderLabel,omitempty"`
}

func (x *SysUser) Reset() {
	*x = SysUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUser) ProtoMessage() {}

func (x *SysUser) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUser.ProtoReflect.Descriptor instead.
func (*SysUser) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{8}
}

func (x *SysUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysUser) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysUser) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SysUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUser) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysUser) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysUser) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysUser) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SysUser) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *SysUser) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *SysUser) GetGenderLabel() string {
	if x != nil {
		return x.GenderLabel
	}
	return ""
}

// -----------sys_user_role---------------------角色和用户关联表--------------------------------
type SysUserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户ID
	RoleId int64 `protobuf:"varint,2,opt,name=roleId,proto3" json:"roleId,omitempty"` //角色ID
}

func (x *SysUserRole) Reset() {
	*x = SysUserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserRole) ProtoMessage() {}

func (x *SysUserRole) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserRole.ProtoReflect.Descriptor instead.
func (*SysUserRole) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{9}
}

func (x *SysUserRole) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SysUserRole) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{10}
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AccessExpire int64  `protobuf:"varint,3,opt,name=accessExpire,proto3" json:"accessExpire,omitempty"`
	RefreshAfter int64  `protobuf:"varint,4,opt,name=refreshAfter,proto3" json:"refreshAfter,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{11}
}

func (x *LoginResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LoginResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResp) GetAccessExpire() int64 {
	if x != nil {
		return x.AccessExpire
	}
	return 0
}

func (x *LoginResp) GetRefreshAfter() int64 {
	if x != nil {
		return x.RefreshAfter
	}
	return 0
}

type RefreshTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RefreshTokenReq) Reset() {
	*x = RefreshTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenReq) ProtoMessage() {}

func (x *RefreshTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenReq.ProtoReflect.Descriptor instead.
func (*RefreshTokenReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{12}
}

func (x *RefreshTokenReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 用户相关
type UserGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Nickname string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar   string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DeptId   int64    `protobuf:"varint,5,opt,name=deptId,proto3" json:"deptId,omitempty"`
	Email    string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Gender   int64    `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`
	Mobile   string   `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Status   int64    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	RoleIds  []int64  `protobuf:"varint,10,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
	Roles    []string `protobuf:"bytes,11,rep,name=roles,proto3" json:"roles,omitempty"`
	Perms    []string `protobuf:"bytes,12,rep,name=perms,proto3" json:"perms,omitempty"`
}

func (x *UserGetResp) Reset() {
	*x = UserGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetResp) ProtoMessage() {}

func (x *UserGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetResp.ProtoReflect.Descriptor instead.
func (*UserGetResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{13}
}

func (x *UserGetResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserGetResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserGetResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserGetResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserGetResp) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserGetResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserGetResp) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserGetResp) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserGetResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserGetResp) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UserGetResp) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserGetResp) GetPerms() []string {
	if x != nil {
		return x.Perms
	}
	return nil
}

// --------------------------------菜单管理--------------------------------
type SysMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	ParentId  int64    `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`   //父菜单ID
	TreePath  string   `protobuf:"bytes,3,opt,name=treePath,proto3" json:"treePath,omitempty"`    //父节点ID路径
	Name      string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`            //菜单名称
	Type      int64    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`           //菜单类型(1:菜单；2:目录；3:外链；4:按钮)
	Path      string   `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`            //路由路径(浏览器地址栏路径)
	Component string   `protobuf:"bytes,7,opt,name=component,proto3" json:"component,omitempty"`  //组件路径(vue页面完整路径，省略.vue后缀)
	Perm      string   `protobuf:"bytes,8,opt,name=perm,proto3" json:"perm,omitempty"`            //权限标识
	Visible   int64    `protobuf:"varint,9,opt,name=visible,proto3" json:"visible,omitempty"`     //显示状态(1-显示;0-隐藏)
	Sort      int64    `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`          //排序
	Icon      string   `protobuf:"bytes,11,opt,name=icon,proto3" json:"icon,omitempty"`           //菜单图标
	Redirect  string   `protobuf:"bytes,12,opt,name=redirect,proto3" json:"redirect,omitempty"`   //跳转路径
	CreatedAt string   `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt string   `protobuf:"bytes,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
	Roles     []string `protobuf:"bytes,15,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *SysMenu) Reset() {
	*x = SysMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenu) ProtoMessage() {}

func (x *SysMenu) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenu.ProtoReflect.Descriptor instead.
func (*SysMenu) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{14}
}

func (x *SysMenu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenu) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysMenu) GetTreePath() string {
	if x != nil {
		return x.TreePath
	}
	return ""
}

func (x *SysMenu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysMenu) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SysMenu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenu) GetPerm() string {
	if x != nil {
		return x.Perm
	}
	return ""
}

func (x *SysMenu) GetVisible() int64 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *SysMenu) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenu) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SysMenu) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysMenu) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SysMenu) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type SysMenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	ParentId  int64          `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	TreePath  string         `protobuf:"bytes,3,opt,name=treePath,proto3" json:"treePath,omitempty"`
	Name      string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type      int64          `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Path      string         `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Component string         `protobuf:"bytes,7,opt,name=component,proto3" json:"component,omitempty"`
	Perm      string         `protobuf:"bytes,8,opt,name=perm,proto3" json:"perm,omitempty"`
	Visible   int64          `protobuf:"varint,9,opt,name=visible,proto3" json:"visible,omitempty"`
	Sort      int64          `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon      string         `protobuf:"bytes,11,opt,name=icon,proto3" json:"icon,omitempty"`
	Redirect  string         `protobuf:"bytes,12,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Children  []*SysMenuItem `protobuf:"bytes,13,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SysMenuItem) Reset() {
	*x = SysMenuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuItem) ProtoMessage() {}

func (x *SysMenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuItem.ProtoReflect.Descriptor instead.
func (*SysMenuItem) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{15}
}

func (x *SysMenuItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenuItem) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysMenuItem) GetTreePath() string {
	if x != nil {
		return x.TreePath
	}
	return ""
}

func (x *SysMenuItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysMenuItem) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SysMenuItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuItem) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuItem) GetPerm() string {
	if x != nil {
		return x.Perm
	}
	return ""
}

func (x *SysMenuItem) GetVisible() int64 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *SysMenuItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenuItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuItem) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SysMenuItem) GetChildren() []*SysMenuItem {
	if x != nil {
		return x.Children
	}
	return nil
}

type RoutesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Types []int64 `protobuf:"varint,2,rep,packed,name=types,proto3" json:"types,omitempty"`
}

func (x *RoutesReq) Reset() {
	*x = RoutesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutesReq) ProtoMessage() {}

func (x *RoutesReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutesReq.ProtoReflect.Descriptor instead.
func (*RoutesReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{16}
}

func (x *RoutesReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RoutesReq) GetTypes() []int64 {
	if x != nil {
		return x.Types
	}
	return nil
}

type RoutesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysMenu `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RoutesResp) Reset() {
	*x = RoutesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutesResp) ProtoMessage() {}

func (x *RoutesResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutesResp.ProtoReflect.Descriptor instead.
func (*RoutesResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{17}
}

func (x *RoutesResp) GetList() []*SysMenu {
	if x != nil {
		return x.List
	}
	return nil
}

// 列表List
type MenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *MenuListReq) Reset() {
	*x = MenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListReq) ProtoMessage() {}

func (x *MenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListReq.ProtoReflect.Descriptor instead.
func (*MenuListReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{18}
}

func (x *MenuListReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

// 列表Resp
type MenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysMenuItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MenuListResp) Reset() {
	*x = MenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListResp) ProtoMessage() {}

func (x *MenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListResp.ProtoReflect.Descriptor instead.
func (*MenuListResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{19}
}

func (x *MenuListResp) GetList() []*SysMenuItem {
	if x != nil {
		return x.List
	}
	return nil
}

type MenuForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              //id
	ParentId  int64  `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`  //父菜单ID
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`           //菜单名称
	Type      int64  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`          //菜单类型(1:菜单；2:目录；3:外链；4:按钮)
	Path      string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`           //路由路径(浏览器地址栏路径)
	Component string `protobuf:"bytes,6,opt,name=component,proto3" json:"component,omitempty"` //组件路径(vue页面完整路径，省略.vue后缀)
	Perm      string `protobuf:"bytes,7,opt,name=perm,proto3" json:"perm,omitempty"`           //权限标识
	Visible   int64  `protobuf:"varint,8,opt,name=visible,proto3" json:"visible,omitempty"`    //显示状态(1-显示;0-隐藏)
	Sort      int64  `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`          //排序
	Icon      string `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`          //菜单图标
	Redirect  string `protobuf:"bytes,11,opt,name=redirect,proto3" json:"redirect,omitempty"`  //跳转路径
}

func (x *MenuForm) Reset() {
	*x = MenuForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuForm) ProtoMessage() {}

func (x *MenuForm) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuForm.ProtoReflect.Descriptor instead.
func (*MenuForm) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{20}
}

func (x *MenuForm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuForm) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuForm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuForm) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MenuForm) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuForm) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuForm) GetPerm() string {
	if x != nil {
		return x.Perm
	}
	return ""
}

func (x *MenuForm) GetVisible() int64 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *MenuForm) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuForm) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuForm) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type MenuOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string        `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value    int64         `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Children []*MenuOption `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MenuOption) Reset() {
	*x = MenuOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuOption) ProtoMessage() {}

func (x *MenuOption) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuOption.ProtoReflect.Descriptor instead.
func (*MenuOption) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{21}
}

func (x *MenuOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MenuOption) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MenuOption) GetChildren() []*MenuOption {
	if x != nil {
		return x.Children
	}
	return nil
}

type MenuOptionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MenuOption `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MenuOptionsResp) Reset() {
	*x = MenuOptionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuOptionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuOptionsResp) ProtoMessage() {}

func (x *MenuOptionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuOptionsResp.ProtoReflect.Descriptor instead.
func (*MenuOptionsResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{22}
}

func (x *MenuOptionsResp) GetItems() []*MenuOption {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords  string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
	DeptId    int64  `protobuf:"varint,2,opt,name=deptId,proto3" json:"deptId,omitempty"`
	Status    int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	PageNum   int64  `protobuf:"varint,4,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize  int64  `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime string `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *UserListReq) Reset() {
	*x = UserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListReq) ProtoMessage() {}

func (x *UserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListReq.ProtoReflect.Descriptor instead.
func (*UserListReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{23}
}

func (x *UserListReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *UserListReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *UserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UserListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type UserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SysUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *UserListResp) Reset() {
	*x = UserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResp) ProtoMessage() {}

func (x *UserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResp.ProtoReflect.Descriptor instead.
func (*UserListResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{24}
}

func (x *UserListResp) GetList() []*SysUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UserAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Nickname string  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Gender   int64   `protobuf:"varint,3,opt,name=gender,proto3" json:"gender,omitempty"`    //性别((1:男;2:女))
	Password string  `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"` //密码
	DeptId   int64   `protobuf:"varint,5,opt,name=deptId,proto3" json:"deptId,omitempty"`    //部门ID
	Avatar   string  `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`     //用户头像
	Mobile   string  `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`     //联系方式
	Status   int64   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`    //用户状态((1:正常;0:禁用))
	Email    string  `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`       //用户邮箱
	RoleIds  []int64 `protobuf:"varint,10,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
}

func (x *UserAddReq) Reset() {
	*x = UserAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddReq) ProtoMessage() {}

func (x *UserAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddReq.ProtoReflect.Descriptor instead.
func (*UserAddReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{25}
}

func (x *UserAddReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserAddReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserAddReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserAddReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserAddReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserAddReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserAddReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserAddReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserAddReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserAddReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type UserChangePwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`    //userId
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *UserChangePwdReq) Reset() {
	*x = UserChangePwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChangePwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangePwdReq) ProtoMessage() {}

func (x *UserChangePwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangePwdReq.ProtoReflect.Descriptor instead.
func (*UserChangePwdReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{26}
}

func (x *UserChangePwdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserChangePwdReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            //id
	Username string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Nickname string  `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Gender   int64   `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`    //性别((1:男;2:女))
	Password string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"` //密码
	DeptId   int64   `protobuf:"varint,6,opt,name=deptId,proto3" json:"deptId,omitempty"`    //部门ID
	Avatar   string  `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`     //用户头像
	Mobile   string  `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`     //联系方式
	Status   int64   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`    //用户状态((1:正常;0:禁用))
	Email    string  `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`      //用户邮箱
	RoleIds  []int64 `protobuf:"varint,11,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
}

func (x *UserUpdateReq) Reset() {
	*x = UserUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateReq) ProtoMessage() {}

func (x *UserUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateReq.ProtoReflect.Descriptor instead.
func (*UserUpdateReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{27}
}

func (x *UserUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserUpdateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserUpdateReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserUpdateReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserUpdateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserUpdateReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserUpdateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserUpdateReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserUpdateReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserUpdateReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type RoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
	PageNum  int64  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *RoleListReq) Reset() {
	*x = RoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListReq) ProtoMessage() {}

func (x *RoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListReq.ProtoReflect.Descriptor instead.
func (*RoleListReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{28}
}

func (x *RoleListReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *RoleListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *RoleListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SysRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *RoleListResp) Reset() {
	*x = RoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListResp) ProtoMessage() {}

func (x *RoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListResp.ProtoReflect.Descriptor instead.
func (*RoleListResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{29}
}

func (x *RoleListResp) GetList() []*SysRole {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RoleForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Sort      int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Status    int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	DataScope int64  `protobuf:"varint,6,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
}

func (x *RoleForm) Reset() {
	*x = RoleForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleForm) ProtoMessage() {}

func (x *RoleForm) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleForm.ProtoReflect.Descriptor instead.
func (*RoleForm) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{30}
}

func (x *RoleForm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleForm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleForm) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoleForm) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *RoleForm) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoleForm) GetDataScope() int64 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

type RoleOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RoleOption) Reset() {
	*x = RoleOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleOption) ProtoMessage() {}

func (x *RoleOption) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleOption.ProtoReflect.Descriptor instead.
func (*RoleOption) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{31}
}

func (x *RoleOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RoleOption) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type RoleOptionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RoleOption `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RoleOptionsResp) Reset() {
	*x = RoleOptionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleOptionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleOptionsResp) ProtoMessage() {}

func (x *RoleOptionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleOptionsResp.ProtoReflect.Descriptor instead.
func (*RoleOptionsResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{32}
}

func (x *RoleOptionsResp) GetItems() []*RoleOption {
	if x != nil {
		return x.Items
	}
	return nil
}

type RoleMenuIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []int64 `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *RoleMenuIdsResp) Reset() {
	*x = RoleMenuIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuIdsResp) ProtoMessage() {}

func (x *RoleMenuIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuIdsResp.ProtoReflect.Descriptor instead.
func (*RoleMenuIdsResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{33}
}

func (x *RoleMenuIdsResp) GetItems() []int64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type RoleSetMenuIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	MenuIds []int64 `protobuf:"varint,2,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *RoleSetMenuIdsReq) Reset() {
	*x = RoleSetMenuIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSetMenuIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSetMenuIdsReq) ProtoMessage() {}

func (x *RoleSetMenuIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSetMenuIdsReq.ProtoReflect.Descriptor instead.
func (*RoleSetMenuIdsReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{34}
}

func (x *RoleSetMenuIdsReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleSetMenuIdsReq) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

// --------------------------------部门表--------------------------------
type SysDept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //主键
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`            //部门名称
	ParentId  int64  `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`   //父节点id
	TreePath  string `protobuf:"bytes,4,opt,name=treePath,proto3" json:"treePath,omitempty"`    //父节点id路径
	Sort      int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`           //显示顺序
	Status    int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`       //状态(1:正常;0:禁用)
	Deleted   int64  `protobuf:"varint,7,opt,name=deleted,proto3" json:"deleted,omitempty"`     //逻辑删除标识(1:已删除;0:未删除)
	CreateBy  int64  `protobuf:"varint,8,opt,name=createBy,proto3" json:"createBy,omitempty"`   //创建人ID
	UpdateBy  int64  `protobuf:"varint,9,opt,name=updateBy,proto3" json:"updateBy,omitempty"`   //修改人ID
	CreatedAt string `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt string `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
}

func (x *SysDept) Reset() {
	*x = SysDept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDept) ProtoMessage() {}

func (x *SysDept) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDept.ProtoReflect.Descriptor instead.
func (*SysDept) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{35}
}

func (x *SysDept) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDept) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysDept) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysDept) GetTreePath() string {
	if x != nil {
		return x.TreePath
	}
	return ""
}

func (x *SysDept) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysDept) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDept) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *SysDept) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysDept) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysDept) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysDept) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DeptForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId int64  `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	TreePath string `protobuf:"bytes,4,opt,name=treePath,proto3" json:"treePath,omitempty"`
	Sort     int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Status   int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy int64  `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy int64  `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *DeptForm) Reset() {
	*x = DeptForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptForm) ProtoMessage() {}

func (x *DeptForm) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptForm.ProtoReflect.Descriptor instead.
func (*DeptForm) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{36}
}

func (x *DeptForm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptForm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeptForm) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptForm) GetTreePath() string {
	if x != nil {
		return x.TreePath
	}
	return ""
}

func (x *DeptForm) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptForm) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeptForm) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DeptForm) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type DeptListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Status   int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeptListReq) Reset() {
	*x = DeptListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListReq) ProtoMessage() {}

func (x *DeptListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListReq.ProtoReflect.Descriptor instead.
func (*DeptListReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{37}
}

func (x *DeptListReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DeptListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SysDeptItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //主键
	Name      string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`            //部门名称
	ParentId  int64          `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`   //父节点id
	TreePath  string         `protobuf:"bytes,4,opt,name=treePath,proto3" json:"treePath,omitempty"`    //父节点id路径
	Sort      int64          `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`           //显示顺序
	Status    int64          `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`       //状态(1:正常;0:禁用)
	Deleted   int64          `protobuf:"varint,7,opt,name=deleted,proto3" json:"deleted,omitempty"`     //逻辑删除标识(1:已删除;0:未删除)
	CreateBy  int64          `protobuf:"varint,8,opt,name=createBy,proto3" json:"createBy,omitempty"`   //创建人ID
	UpdateBy  int64          `protobuf:"varint,9,opt,name=updateBy,proto3" json:"updateBy,omitempty"`   //修改人ID
	CreatedAt string         `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt string         `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
	Children  []*SysDeptItem `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SysDeptItem) Reset() {
	*x = SysDeptItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptItem) ProtoMessage() {}

func (x *SysDeptItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptItem.ProtoReflect.Descriptor instead.
func (*SysDeptItem) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{38}
}

func (x *SysDeptItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDeptItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysDeptItem) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysDeptItem) GetTreePath() string {
	if x != nil {
		return x.TreePath
	}
	return ""
}

func (x *SysDeptItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysDeptItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDeptItem) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *SysDeptItem) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysDeptItem) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysDeptItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysDeptItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SysDeptItem) GetChildren() []*SysDeptItem {
	if x != nil {
		return x.Children
	}
	return nil
}

type DeptListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysDeptItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DeptListResp) Reset() {
	*x = DeptListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListResp) ProtoMessage() {}

func (x *DeptListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListResp.ProtoReflect.Descriptor instead.
func (*DeptListResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{39}
}

func (x *DeptListResp) GetList() []*SysDeptItem {
	if x != nil {
		return x.List
	}
	return nil
}

type DeptOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string        `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value    int64         `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Children []*DeptOption `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *DeptOption) Reset() {
	*x = DeptOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptOption) ProtoMessage() {}

func (x *DeptOption) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptOption.ProtoReflect.Descriptor instead.
func (*DeptOption) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{40}
}

func (x *DeptOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DeptOption) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DeptOption) GetChildren() []*DeptOption {
	if x != nil {
		return x.Children
	}
	return nil
}

type DeptOptionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DeptOption `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DeptOptionResp) Reset() {
	*x = DeptOptionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptOptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptOptionResp) ProtoMessage() {}

func (x *DeptOptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptOptionResp.ProtoReflect.Descriptor instead.
func (*DeptOptionResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{41}
}

func (x *DeptOptionResp) GetItems() []*DeptOption {
	if x != nil {
		return x.Items
	}
	return nil
}

// --------------------------------字典数据表--------------------------------
type SysDict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //主键
	TypeCode  string `protobuf:"bytes,2,opt,name=typeCode,proto3" json:"typeCode,omitempty"`    //字典类型编码
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`            //字典项名称
	Value     string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`          //字典项值
	Sort      int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`           //排序
	Status    int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`       //状态(1:正常;0:禁用)
	Defaulted int64  `protobuf:"varint,7,opt,name=defaulted,proto3" json:"defaulted,omitempty"` //是否默认(1:是;0:否)
	Remark    string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`        //备注
	CreatedAt string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //创建时间
	UpdatedAt string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
}

func (x *SysDict) Reset() {
	*x = SysDict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDict) ProtoMessage() {}

func (x *SysDict) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDict.ProtoReflect.Descriptor instead.
func (*SysDict) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{42}
}

func (x *SysDict) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDict) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDict) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysDict) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SysDict) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysDict) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDict) GetDefaulted() int64 {
	if x != nil {
		return x.Defaulted
	}
	return 0
}

func (x *SysDict) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysDict) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysDict) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type SysDictType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              //主键
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           //类型名称
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`           //类型编码
	Status    int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`      //状态(1:正常;0:禁用)
	Remark    string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`       //备注
	CreatedAt string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
}

func (x *SysDictType) Reset() {
	*x = SysDictType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictType) ProtoMessage() {}

func (x *SysDictType) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictType.ProtoReflect.Descriptor instead.
func (*SysDictType) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{43}
}

func (x *SysDictType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysDictType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SysDictType) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictType) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysDictType) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysDictType) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DictTypeForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         //主键
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`      //类型名称
	Code   string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`      //类型编码
	Status int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` //状态(1:正常;0:禁用)
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`  //备注
}

func (x *DictTypeForm) Reset() {
	*x = DictTypeForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeForm) ProtoMessage() {}

func (x *DictTypeForm) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeForm.ProtoReflect.Descriptor instead.
func (*DictTypeForm) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{44}
}

func (x *DictTypeForm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictTypeForm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictTypeForm) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DictTypeForm) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictTypeForm) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DictForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeCode string `protobuf:"bytes,1,opt,name=typeCode,proto3" json:"typeCode,omitempty"` //字典类型编码
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`         //字典项名称
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`       //字典项值
	Sort     int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`        //排序
	Status   int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`    //状态(1:正常;0:禁用)
	Remark   string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`     //备注
	Id       int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DictForm) Reset() {
	*x = DictForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictForm) ProtoMessage() {}

func (x *DictForm) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictForm.ProtoReflect.Descriptor instead.
func (*DictForm) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{45}
}

func (x *DictForm) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *DictForm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictForm) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictForm) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DictForm) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictForm) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictForm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DictListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeCode string `protobuf:"bytes,1,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	PageNum  int64  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *DictListReq) Reset() {
	*x = DictListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictListReq) ProtoMessage() {}

func (x *DictListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictListReq.ProtoReflect.Descriptor instead.
func (*DictListReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{46}
}

func (x *DictListReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *DictListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *DictListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DictListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SysDict `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *DictListResp) Reset() {
	*x = DictListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictListResp) ProtoMessage() {}

func (x *DictListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictListResp.ProtoReflect.Descriptor instead.
func (*DictListResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{47}
}

func (x *DictListResp) GetList() []*SysDict {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DictListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DictTypeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
	PageNum  int64  `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *DictTypeListReq) Reset() {
	*x = DictTypeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeListReq) ProtoMessage() {}

func (x *DictTypeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeListReq.ProtoReflect.Descriptor instead.
func (*DictTypeListReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{48}
}

func (x *DictTypeListReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DictTypeListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *DictTypeListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DictTypeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SysDictType `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *DictTypeListResp) Reset() {
	*x = DictTypeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeListResp) ProtoMessage() {}

func (x *DictTypeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeListResp.ProtoReflect.Descriptor instead.
func (*DictTypeListResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{49}
}

func (x *DictTypeListResp) GetList() []*SysDictType {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DictTypeListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DictTypeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string        `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value    int64         `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Children []*DeptOption `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *DictTypeOption) Reset() {
	*x = DictTypeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeOption) ProtoMessage() {}

func (x *DictTypeOption) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeOption.ProtoReflect.Descriptor instead.
func (*DictTypeOption) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{50}
}

func (x *DictTypeOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DictTypeOption) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DictTypeOption) GetChildren() []*DeptOption {
	if x != nil {
		return x.Children
	}
	return nil
}

type DictOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string        `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value    string        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Children []*DeptOption `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *DictOption) Reset() {
	*x = DictOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictOption) ProtoMessage() {}

func (x *DictOption) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictOption.ProtoReflect.Descriptor instead.
func (*DictOption) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{51}
}

func (x *DictOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DictOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictOption) GetChildren() []*DeptOption {
	if x != nil {
		return x.Children
	}
	return nil
}

type DictTypeOptionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DictTypeOption `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DictTypeOptionsResp) Reset() {
	*x = DictTypeOptionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeOptionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeOptionsResp) ProtoMessage() {}

func (x *DictTypeOptionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeOptionsResp.ProtoReflect.Descriptor instead.
func (*DictTypeOptionsResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{52}
}

func (x *DictTypeOptionsResp) GetItems() []*DictTypeOption {
	if x != nil {
		return x.Items
	}
	return nil
}

type DictOptionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DictOption `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DictOptionsResp) Reset() {
	*x = DictOptionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictOptionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictOptionsResp) ProtoMessage() {}

func (x *DictOptionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictOptionsResp.ProtoReflect.Descriptor instead.
func (*DictOptionsResp) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{53}
}

func (x *DictOptionsResp) GetItems() []*DictOption {
	if x != nil {
		return x.Items
	}
	return nil
}

type TypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeCode string `protobuf:"bytes,1,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
}

func (x *TypeReq) Reset() {
	*x = TypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeReq) ProtoMessage() {}

func (x *TypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeReq.ProtoReflect.Descriptor instead.
func (*TypeReq) Descriptor() ([]byte, []int) {
	return file_pb_sys_proto_rawDescGZIP(), []int{54}
}

func (x *TypeReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

var File_pb_sys_proto protoreflect.FileDescriptor

var file_pb_sys_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x62, 0x2f, 0x73, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x73, 0x79, 0x73, 0x50, 0x62, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a,
	0x0a, 0x06, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x08, 0x0a, 0x06, 0x41, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x22, 0x18, 0x0a, 0x06, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0d,
	0x0a, 0x0b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x0a,
	0x0d, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7,
	0x01, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3d, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0x8b, 0x03, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x3d, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xa9, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x22,
	0xef, 0x02, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x65, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x72,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x22, 0xd1, 0x02, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x72, 0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x72, 0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e,
	0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x33, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0a, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x0b,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x82, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x22, 0x67, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x3a, 0x0a,
	0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x88, 0x02,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x9b, 0x02, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x5f,
	0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x48, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3a, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x27,
	0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x45, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x9f,
	0x02, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72,
	0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72,
	0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xca, 0x01, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x72, 0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x72, 0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x41, 0x0a,
	0x0b, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xd3, 0x02, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62,
	0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x36, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x79, 0x73,
	0x44, 0x65, 0x70, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x67,
	0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73,
	0x50, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x39, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62,
	0x2e, 0x44, 0x65, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x76, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xa4,
	0x01, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x63, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x50, 0x0a, 0x10, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6b, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e,
	0x44, 0x65, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x22, 0x67, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x42, 0x0a,
	0x13, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x3a, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x25, 0x0a,
	0x07, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x32, 0xa6, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12,
	0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12,
	0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x36, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73,
	0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x52, 0x6f,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50,
	0x62, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x27, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x0c, 0x2e, 0x73, 0x79,
	0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50,
	0x62, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x64, 0x73, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0e, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x73,
	0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x06, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x50,
	0x62, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27,
	0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x47, 0x65, 0x74, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x50,
	0x62, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e,
	0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2e, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x41,
	0x64, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x46,
	0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x4d, 0x65,
	0x6e, 0x75, 0x44, 0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x07, 0x44, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50,
	0x62, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73,
	0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31,
	0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73,
	0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e,
	0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79,
	0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x27, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x74, 0x47, 0x65, 0x74, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73,
	0x50, 0x62, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62,
	0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62,
	0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a,
	0x0b, 0x44, 0x65, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x50, 0x62, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79,
	0x73, 0x50, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64,
	0x64, 0x12, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73,
	0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0f, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x50, 0x62, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79,
	0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x44, 0x69, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69,
	0x63, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x07, 0x44, 0x69, 0x63, 0x74,
	0x47, 0x65, 0x74, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e,
	0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x50, 0x62, 0x2e, 0x44, 0x69,
	0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x2f, 0x73, 0x79, 0x73, 0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_sys_proto_rawDescOnce sync.Once
	file_pb_sys_proto_rawDescData = file_pb_sys_proto_rawDesc
)

func file_pb_sys_proto_rawDescGZIP() []byte {
	file_pb_sys_proto_rawDescOnce.Do(func() {
		file_pb_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_sys_proto_rawDescData)
	})
	return file_pb_sys_proto_rawDescData
}

var file_pb_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_pb_sys_proto_goTypes = []interface{}{
	(*IdReq)(nil),               // 0: sysPb.IdReq
	(*IdsReq)(nil),              // 1: sysPb.IdsReq
	(*AnyReq)(nil),              // 2: sysPb.AnyReq
	(*IdResp)(nil),              // 3: sysPb.IdResp
	(*SuccessResp)(nil),         // 4: sysPb.SuccessResp
	(*SuccessIdResp)(nil),       // 5: sysPb.SuccessIdResp
	(*SysRole)(nil),             // 6: sysPb.SysRole
	(*SysRoleMenu)(nil),         // 7: sysPb.SysRoleMenu
	(*SysUser)(nil),             // 8: sysPb.SysUser
	(*SysUserRole)(nil),         // 9: sysPb.SysUserRole
	(*LoginReq)(nil),            // 10: sysPb.LoginReq
	(*LoginResp)(nil),           // 11: sysPb.LoginResp
	(*RefreshTokenReq)(nil),     // 12: sysPb.RefreshTokenReq
	(*UserGetResp)(nil),         // 13: sysPb.UserGetResp
	(*SysMenu)(nil),             // 14: sysPb.SysMenu
	(*SysMenuItem)(nil),         // 15: sysPb.SysMenuItem
	(*RoutesReq)(nil),           // 16: sysPb.RoutesReq
	(*RoutesResp)(nil),          // 17: sysPb.RoutesResp
	(*MenuListReq)(nil),         // 18: sysPb.MenuListReq
	(*MenuListResp)(nil),        // 19: sysPb.MenuListResp
	(*MenuForm)(nil),            // 20: sysPb.MenuForm
	(*MenuOption)(nil),          // 21: sysPb.MenuOption
	(*MenuOptionsResp)(nil),     // 22: sysPb.MenuOptionsResp
	(*UserListReq)(nil),         // 23: sysPb.UserListReq
	(*UserListResp)(nil),        // 24: sysPb.UserListResp
	(*UserAddReq)(nil),          // 25: sysPb.UserAddReq
	(*UserChangePwdReq)(nil),    // 26: sysPb.UserChangePwdReq
	(*UserUpdateReq)(nil),       // 27: sysPb.UserUpdateReq
	(*RoleListReq)(nil),         // 28: sysPb.RoleListReq
	(*RoleListResp)(nil),        // 29: sysPb.RoleListResp
	(*RoleForm)(nil),            // 30: sysPb.RoleForm
	(*RoleOption)(nil),          // 31: sysPb.RoleOption
	(*RoleOptionsResp)(nil),     // 32: sysPb.RoleOptionsResp
	(*RoleMenuIdsResp)(nil),     // 33: sysPb.RoleMenuIdsResp
	(*RoleSetMenuIdsReq)(nil),   // 34: sysPb.RoleSetMenuIdsReq
	(*SysDept)(nil),             // 35: sysPb.SysDept
	(*DeptForm)(nil),            // 36: sysPb.DeptForm
	(*DeptListReq)(nil),         // 37: sysPb.DeptListReq
	(*SysDeptItem)(nil),         // 38: sysPb.SysDeptItem
	(*DeptListResp)(nil),        // 39: sysPb.DeptListResp
	(*DeptOption)(nil),          // 40: sysPb.DeptOption
	(*DeptOptionResp)(nil),      // 41: sysPb.DeptOptionResp
	(*SysDict)(nil),             // 42: sysPb.SysDict
	(*SysDictType)(nil),         // 43: sysPb.SysDictType
	(*DictTypeForm)(nil),        // 44: sysPb.DictTypeForm
	(*DictForm)(nil),            // 45: sysPb.DictForm
	(*DictListReq)(nil),         // 46: sysPb.DictListReq
	(*DictListResp)(nil),        // 47: sysPb.DictListResp
	(*DictTypeListReq)(nil),     // 48: sysPb.DictTypeListReq
	(*DictTypeListResp)(nil),    // 49: sysPb.DictTypeListResp
	(*DictTypeOption)(nil),      // 50: sysPb.DictTypeOption
	(*DictOption)(nil),          // 51: sysPb.DictOption
	(*DictTypeOptionsResp)(nil), // 52: sysPb.DictTypeOptionsResp
	(*DictOptionsResp)(nil),     // 53: sysPb.DictOptionsResp
	(*TypeReq)(nil),             // 54: sysPb.TypeReq
}
var file_pb_sys_proto_depIdxs = []int32{
	15, // 0: sysPb.SysMenuItem.children:type_name -> sysPb.SysMenuItem
	14, // 1: sysPb.RoutesResp.list:type_name -> sysPb.SysMenu
	15, // 2: sysPb.MenuListResp.list:type_name -> sysPb.SysMenuItem
	21, // 3: sysPb.MenuOption.children:type_name -> sysPb.MenuOption
	21, // 4: sysPb.MenuOptionsResp.items:type_name -> sysPb.MenuOption
	8,  // 5: sysPb.UserListResp.list:type_name -> sysPb.SysUser
	6,  // 6: sysPb.RoleListResp.list:type_name -> sysPb.SysRole
	31, // 7: sysPb.RoleOptionsResp.items:type_name -> sysPb.RoleOption
	38, // 8: sysPb.SysDeptItem.children:type_name -> sysPb.SysDeptItem
	38, // 9: sysPb.DeptListResp.list:type_name -> sysPb.SysDeptItem
	40, // 10: sysPb.DeptOption.children:type_name -> sysPb.DeptOption
	40, // 11: sysPb.DeptOptionResp.items:type_name -> sysPb.DeptOption
	42, // 12: sysPb.DictListResp.list:type_name -> sysPb.SysDict
	43, // 13: sysPb.DictTypeListResp.list:type_name -> sysPb.SysDictType
	40, // 14: sysPb.DictTypeOption.children:type_name -> sysPb.DeptOption
	40, // 15: sysPb.DictOption.children:type_name -> sysPb.DeptOption
	50, // 16: sysPb.DictTypeOptionsResp.items:type_name -> sysPb.DictTypeOption
	51, // 17: sysPb.DictOptionsResp.items:type_name -> sysPb.DictOption
	10, // 18: sysPb.sys.Login:input_type -> sysPb.LoginReq
	12, // 19: sysPb.sys.RefreshToken:input_type -> sysPb.RefreshTokenReq
	23, // 20: sysPb.sys.UserList:input_type -> sysPb.UserListReq
	0,  // 21: sysPb.sys.UserGet:input_type -> sysPb.IdReq
	25, // 22: sysPb.sys.UserAdd:input_type -> sysPb.UserAddReq
	27, // 23: sysPb.sys.UserUpdate:input_type -> sysPb.UserUpdateReq
	26, // 24: sysPb.sys.UserChangePwd:input_type -> sysPb.UserChangePwdReq
	1,  // 25: sysPb.sys.UserDel:input_type -> sysPb.IdsReq
	28, // 26: sysPb.sys.RoleList:input_type -> sysPb.RoleListReq
	2,  // 27: sysPb.sys.RoleOptions:input_type -> sysPb.AnyReq
	0,  // 28: sysPb.sys.RoleGet:input_type -> sysPb.IdReq
	30, // 29: sysPb.sys.RoleAdd:input_type -> sysPb.RoleForm
	30, // 30: sysPb.sys.RoleUpdate:input_type -> sysPb.RoleForm
	1,  // 31: sysPb.sys.RoleDel:input_type -> sysPb.IdsReq
	0,  // 32: sysPb.sys.RoleMenuIds:input_type -> sysPb.IdReq
	34, // 33: sysPb.sys.RoleSetMenuIds:input_type -> sysPb.RoleSetMenuIdsReq
	16, // 34: sysPb.sys.Routes:input_type -> sysPb.RoutesReq
	18, // 35: sysPb.sys.MenuList:input_type -> sysPb.MenuListReq
	0,  // 36: sysPb.sys.MenuGet:input_type -> sysPb.IdReq
	20, // 37: sysPb.sys.MenuAdd:input_type -> sysPb.MenuForm
	20, // 38: sysPb.sys.MenuUpdate:input_type -> sysPb.MenuForm
	1,  // 39: sysPb.sys.MenuDel:input_type -> sysPb.IdsReq
	2,  // 40: sysPb.sys.MenuOptions:input_type -> sysPb.AnyReq
	36, // 41: sysPb.sys.DeptAdd:input_type -> sysPb.DeptForm
	36, // 42: sysPb.sys.DeptUpdate:input_type -> sysPb.DeptForm
	1,  // 43: sysPb.sys.DeptDel:input_type -> sysPb.IdsReq
	0,  // 44: sysPb.sys.DeptGet:input_type -> sysPb.IdReq
	37, // 45: sysPb.sys.DeptList:input_type -> sysPb.DeptListReq
	2,  // 46: sysPb.sys.DeptOptions:input_type -> sysPb.AnyReq
	44, // 47: sysPb.sys.DictTypeAdd:input_type -> sysPb.DictTypeForm
	44, // 48: sysPb.sys.DictTypeUpdate:input_type -> sysPb.DictTypeForm
	1,  // 49: sysPb.sys.DictTypeDel:input_type -> sysPb.IdsReq
	0,  // 50: sysPb.sys.DictTypeGet:input_type -> sysPb.IdReq
	48, // 51: sysPb.sys.DictTypeList:input_type -> sysPb.DictTypeListReq
	2,  // 52: sysPb.sys.DictTypeOptions:input_type -> sysPb.AnyReq
	45, // 53: sysPb.sys.DictAdd:input_type -> sysPb.DictForm
	45, // 54: sysPb.sys.DictUpdate:input_type -> sysPb.DictForm
	1,  // 55: sysPb.sys.DictDel:input_type -> sysPb.IdsReq
	0,  // 56: sysPb.sys.DictGet:input_type -> sysPb.IdReq
	46, // 57: sysPb.sys.DictList:input_type -> sysPb.DictListReq
	54, // 58: sysPb.sys.DictOptions:input_type -> sysPb.TypeReq
	11, // 59: sysPb.sys.Login:output_type -> sysPb.LoginResp
	11, // 60: sysPb.sys.RefreshToken:output_type -> sysPb.LoginResp
	24, // 61: sysPb.sys.UserList:output_type -> sysPb.UserListResp
	13, // 62: sysPb.sys.UserGet:output_type -> sysPb.UserGetResp
	3,  // 63: sysPb.sys.UserAdd:output_type -> sysPb.IdResp
	4,  // 64: sysPb.sys.UserUpdate:output_type -> sysPb.SuccessResp
	4,  // 65: sysPb.sys.UserChangePwd:output_type -> sysPb.SuccessResp
	4,  // 66: sysPb.sys.UserDel:output_type -> sysPb.SuccessResp
	29, // 67: sysPb.sys.RoleList:output_type -> sysPb.RoleListResp
	32, // 68: sysPb.sys.RoleOptions:output_type -> sysPb.RoleOptionsResp
	6,  // 69: sysPb.sys.RoleGet:output_type -> sysPb.SysRole
	3,  // 70: sysPb.sys.RoleAdd:output_type -> sysPb.IdResp
	4,  // 71: sysPb.sys.RoleUpdate:output_type -> sysPb.SuccessResp
	4,  // 72: sysPb.sys.RoleDel:output_type -> sysPb.SuccessResp
	33, // 73: sysPb.sys.RoleMenuIds:output_type -> sysPb.RoleMenuIdsResp
	4,  // 74: sysPb.sys.RoleSetMenuIds:output_type -> sysPb.SuccessResp
	17, // 75: sysPb.sys.Routes:output_type -> sysPb.RoutesResp
	19, // 76: sysPb.sys.MenuList:output_type -> sysPb.MenuListResp
	14, // 77: sysPb.sys.MenuGet:output_type -> sysPb.SysMenu
	4,  // 78: sysPb.sys.MenuAdd:output_type -> sysPb.SuccessResp
	4,  // 79: sysPb.sys.MenuUpdate:output_type -> sysPb.SuccessResp
	4,  // 80: sysPb.sys.MenuDel:output_type -> sysPb.SuccessResp
	22, // 81: sysPb.sys.MenuOptions:output_type -> sysPb.MenuOptionsResp
	4,  // 82: sysPb.sys.DeptAdd:output_type -> sysPb.SuccessResp
	4,  // 83: sysPb.sys.DeptUpdate:output_type -> sysPb.SuccessResp
	4,  // 84: sysPb.sys.DeptDel:output_type -> sysPb.SuccessResp
	35, // 85: sysPb.sys.DeptGet:output_type -> sysPb.SysDept
	39, // 86: sysPb.sys.DeptList:output_type -> sysPb.DeptListResp
	41, // 87: sysPb.sys.DeptOptions:output_type -> sysPb.DeptOptionResp
	4,  // 88: sysPb.sys.DictTypeAdd:output_type -> sysPb.SuccessResp
	4,  // 89: sysPb.sys.DictTypeUpdate:output_type -> sysPb.SuccessResp
	4,  // 90: sysPb.sys.DictTypeDel:output_type -> sysPb.SuccessResp
	43, // 91: sysPb.sys.DictTypeGet:output_type -> sysPb.SysDictType
	49, // 92: sysPb.sys.DictTypeList:output_type -> sysPb.DictTypeListResp
	52, // 93: sysPb.sys.DictTypeOptions:output_type -> sysPb.DictTypeOptionsResp
	4,  // 94: sysPb.sys.DictAdd:output_type -> sysPb.SuccessResp
	4,  // 95: sysPb.sys.DictUpdate:output_type -> sysPb.SuccessResp
	4,  // 96: sysPb.sys.DictDel:output_type -> sysPb.SuccessResp
	42, // 97: sysPb.sys.DictGet:output_type -> sysPb.SysDict
	47, // 98: sysPb.sys.DictList:output_type -> sysPb.DictListResp
	53, // 99: sysPb.sys.DictOptions:output_type -> sysPb.DictOptionsResp
	59, // [59:100] is the sub-list for method output_type
	18, // [18:59] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pb_sys_proto_init() }
func file_pb_sys_proto_init() {
	if File_pb_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuOptionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChangePwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleOptionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSetMenuIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptOptionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeOptionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictOptionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sys_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_sys_proto_goTypes,
		DependencyIndexes: file_pb_sys_proto_depIdxs,
		MessageInfos:      file_pb_sys_proto_msgTypes,
	}.Build()
	File_pb_sys_proto = out.File
	file_pb_sys_proto_rawDesc = nil
	file_pb_sys_proto_goTypes = nil
	file_pb_sys_proto_depIdxs = nil
}
